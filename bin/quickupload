#!/bin/sh

# quickupload: quickly publish a file on the web by rsync'ing it to your
# webserver. supports reading input from stdin (which is automatically given an
# appriopriate file ending)

# Copyright (c) 2015 Marc Brinkmann

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

FILENAME=
TMPDIR=
CONFFILE="${XDG_CONFIG_HOME:-${HOME}/.config}"/quickupload.conf

if [ ! -e "$CONFFILE" ]; then
  echo "configuration file ${CONFFILE} does not exist. Here's an example to get you started:"
  echo
  echo 'RSYNC_REMOTE=root@mywebhost:/var/www/html/files'
  echo '# requires rsync >= 3.1.0 on remote end:'
  echo '#RSYNC_OPTS=--chown=root:root'
  echo 'BASE_URL=http://mydomain.com/files'
  exit 1;
fi;

. "${CONFFILE}"

show_usage() {
  SCRIPT="$(basename $0)"
  echo "usage: ${SCRIPT} [FILE_OR_DIR_TO_UPLOAD]...  or  CMD | ${SCRIPT}"
}

upload() {
  rsync --quiet --archive --progress --rsh=ssh --no-owner --no-group --no-perms --chmod=u=rwX --chmod=g=rX --chmod=o=rX ${RSYNC_OPTS} "$@" "${RSYNC_REMOTE}"/
  for fn; do
    show_quoted "$fn"
  done;
}

show_quoted() {
  QUOTED=$(python -c "import urllib, sys; print urllib.quote(sys.argv[1])" "$(basename "$1")")
  URL="${BASE_URL}/${QUOTED}"
  if [ -d "$1" ]; then
    echo "[dir] ${URL}"
    # TODO: properly recurse and quote
  else
    echo "${URL}"
  fi;
}

# check if stdin is a pipe
if [ ! -t 0 ]; then
  if [ $# -gt 0 ]; then
    echo "quickupload: cannot handle filename and STDIN input at the same time"
    exit 1
  fi

  TMPDIR=$(mktemp -d)
  FILENAME="${TMPDIR}/input"

  # save to temporary file
  cat /dev/stdin > "$FILENAME"

  # rename appropriately
  ID=$(cat /proc/sys/kernel/random/uuid | cut -d- -f1)

  # find out file ending
  EXT=$(grep $(mimetype --output-format %m "${FILENAME}") /etc/mime.types | awk '{FS=" "; print $2;}')

  # add dot to extension
  if [ $EXT ]; then
    EXT=".${EXT}"
  fi;

  ID="${TMPDIR}/${ID}${EXT}"
  mv "${FILENAME}" "${ID}"
  FILENAME="${ID}"
fi;

# ensure we have either $FILENAME or arguments set
if [ ! $FILENAME ] && [ $# -eq 0 ]; then
  show_usage
  exit 1
fi;

if [ $FILENAME ]; then
  upload "$FILENAME"
else
  upload "$@"
fi;

if [ "${TMPDIR}" ]; then
  # avoid rm -rf in scripts
  rm "${FILENAME}"
  rmdir "${TMPDIR}"
fi;
