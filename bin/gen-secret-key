#!/usr/bin/env python

# generates a secret key using /dev/urandom

# Copyright (c) 2015 Marc Brinkmann

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

import click
from binascii import hexlify
from base64 import b64encode
import os

OUTPUT_FUNC = {'hex': hexlify, 'base64': lambda s: b64encode(s).rstrip('=')}


@click.command(help='Generates random bytes using /dev/urandom')
@click.option('-n', '--num_bytes',
              default=32,
              help='Number of random bytes to use (default: 32)')
@click.option('-o', '--output-format',
              default='base64',
              type=click.Choice(['hex', 'base64']),
              help='Output format (default: base64)')
def gen_secret_key(num_bytes, output_format):
    rand_bytes = os.urandom(num_bytes)
    click.echo(OUTPUT_FUNC[output_format](rand_bytes))


if __name__ == '__main__':
    gen_secret_key()
