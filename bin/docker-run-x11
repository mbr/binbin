#!/bin/sh

# docker-run-x11: Setup X11 authorization and run a docker container with access
#                 to the XServer
# about the real system. Mainly useful for recording screencast-snippets.

# Copyright (c) 2015 Marc Brinkmann

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

set -e

XSOCK=/tmp/.X11-unix
XAUTH=/tmp/.docker.xauth

# Extract the authorization info and set the beginning to FamilyWild (0xFFFF), then merge back in.
# This allows access regardless of connection type.
xauth nlist $DISPLAY | sed -e 's/^..../ffff/' | xauth -f $XAUTH nmerge -

# Run docker, passing in authority and socket.
exec docker run -ti -v $XSOCK:$XSOCK -v $XAUTH:$XAUTH:ro -e XAUTHORITY=$XAUTH -e DISPLAY=$DISPLAY $@
